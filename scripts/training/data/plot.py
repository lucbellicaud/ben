import matplotlib.pyplot as plt
import numpy as np

data = [
    ("2024-03-15 19:06:33", 10000, 0.17160366475582123),
    ("2024-03-15 19:10:28", 20000, 0.18613240122795105),
    ("2024-03-15 19:14:59", 30000, 0.17141850292682648),
    ("2024-03-15 19:19:26", 40000, 0.12223047763109207),
    ("2024-03-15 19:23:21", 50000, 0.10648588836193085),
    ("2024-03-15 19:27:15", 60000, 0.11194948107004166),
    ("2024-03-15 19:30:57", 70000, 0.13466227054595947),
    ("2024-03-15 19:35:00", 80000, 0.13971686363220215),
    ("2024-03-15 19:39:20", 90000, 0.10474927723407745),
    ("2024-03-15 19:43:50", 100000, 0.1251012682914734),
    ("2024-03-15 19:48:03", 110000, 0.09949154406785965),
    ("2024-03-15 19:51:54", 120000, 0.11493426561355591),
    ("2024-03-15 19:56:20", 130000, 0.12719754874706268),
    ("2024-03-15 20:00:35", 140000, 0.07852985709905624),
    ("2024-03-15 20:05:00", 150000, 0.127577006816864),
    ("2024-03-15 20:08:59", 160000, 0.12634900212287903),
    ("2024-03-15 20:13:18", 170000, 0.12673631310462952),
    ("2024-03-15 20:17:20", 180000, 0.09127943217754364),
    ("2024-03-15 20:21:42", 190000, 0.10409590601921082),
    ("2024-03-15 20:26:03", 200000, 0.056533314287662506),
    ("2024-03-15 20:30:22", 210000, 0.1109573245048523),
    ("2024-03-15 20:33:59", 220000, 0.08156024664640427),
    ("2024-03-15 20:37:59", 230000, 0.1035376638174057),
    ("2024-03-15 20:42:19", 240000, 0.10961341857910156),
    ("2024-03-15 20:46:13", 250000, 0.09472917020320892),
    ("2024-03-15 20:50:02", 260000, 0.12112880498170853),
    ("2024-03-15 20:54:17", 270000, 0.09256667643785477),
    ("2024-03-15 20:58:25", 280000, 0.09672560542821884),
    ("2024-03-15 21:02:34", 290000, 0.10494298487901688),
    ("2024-03-15 21:06:31", 300000, 0.09348408132791519),
    ("2024-03-15 21:10:45", 310000, 0.11949090659618378),
    ("2024-03-15 21:14:39", 320000, 0.06160876899957657),
    ("2024-03-15 21:18:48", 330000, 0.11539345979690552),
    ("2024-03-15 21:22:48", 340000, 0.09479574114084244),
    ("2024-03-15 21:26:37", 350000, 0.09350884705781937),
    ("2024-03-15 21:30:29", 360000, 0.09562000632286072),
    ("2024-03-15 21:34:29", 370000, 0.11154235154390335),
    ("2024-03-15 21:38:38", 380000, 0.11477084457874298),
    ("2024-03-15 21:42:04", 390000, 0.08233215659856796),
    ("2024-03-15 21:45:32", 400000, 0.10474791377782822),
    ("2024-03-15 21:49:36", 410000, 0.06286102533340454),
    ("2024-03-15 21:53:42", 420000, 0.09214437007904053),
    ("2024-03-15 21:57:37", 430000, 0.09557422995567322),
    ("2024-03-15 22:01:51", 440000, 0.08828835934400558),
    ("2024-03-15 22:06:07", 450000, 0.10472451895475388),
    ("2024-03-15 22:09:58", 460000, 0.10518793761730194),
    ("2024-03-15 22:14:00", 470000, 0.08166540414094925),
    ("2024-03-15 22:18:10", 480000, 0.10344056785106659),
    ("2024-03-15 22:22:29", 490000, 0.0914212316274643),
    ("2024-03-15 22:26:49", 500000, 0.13474807143211365),
    ("2024-03-15 22:30:56", 510000, 0.08926928788423538),
    ("2024-03-15 22:35:15", 520000, 0.06449577212333679),
    ("2024-03-15 22:39:13", 530000, 0.07740018516778946),
    ("2024-03-15 22:43:34", 540000, 0.10103202611207962),
    ("2024-03-15 22:47:28", 550000, 0.08738462626934052),
    ("2024-03-15 22:51:40", 560000, 0.0954841822385788),
    ("2024-03-15 22:56:06", 570000, 0.06902403384447098),
    ("2024-03-15 23:00:32", 580000, 0.10279108583927155),
    ("2024-03-15 23:04:18", 590000, 0.09479402005672455),
    ("2024-03-15 23:08:06", 600000, 0.09069237112998962),
    ("2024-03-15 23:12:31", 610000, 0.08704835176467896),
    ("2024-03-15 23:16:11", 620000, 0.09627052396535873),
    ("2024-03-15 23:20:17", 630000, 0.08392617106437683),
    ("2024-03-15 23:24:42", 640000, 0.09846082329750061),
    ("2024-03-15 23:28:23", 650000, 0.08627910166978836),
    ("2024-03-15 23:32:03", 660000, 0.09087269008159637),
    ("2024-03-15 23:36:27", 670000, 0.05875484645366669),
    ("2024-03-15 23:40:51", 680000, 0.08478686213493347),
    ("2024-03-15 23:44:56", 690000, 0.07067634910345078),
    ("2024-03-15 23:48:50", 700000, 0.0567421019077301),
    ("2024-03-15 23:53:00", 710000, 0.09800899028778076),
    ("2024-03-15 23:57:25", 720000, 0.09964923560619354),
    ("2024-03-16 00:02:39", 730000, 0.07538575679063797),
    ("2024-03-16 00:07:12", 740000, 0.07208719849586487),
    ("2024-03-16 00:11:37", 750000, 0.07810959219932556),
    ("2024-03-16 00:16:06", 760000, 0.07639946043491364),
    ("2024-03-16 00:20:31", 770000, 0.07589845359325409),
    ("2024-03-16 00:24:43", 780000, 0.07377254217863083),
    ("2024-03-16 00:28:56", 790000, 0.09681351482868195),
    ("2024-03-16 00:33:21", 800000, 0.11190332472324371),
    ("2024-03-16 00:38:01", 810000, 0.07149497419595718),
    ("2024-03-16 00:42:38", 820000, 0.08745259791612625),
    ("2024-03-16 00:47:11", 830000, 0.08339544385671616),
    ("2024-03-16 00:50:46", 840000, 0.07060851156711578),
    ("2024-03-16 00:55:07", 850000, 0.0824948325753212 ),
    ("2024-03-16 01:00:06", 860000, 0.09036869555711746),
    ("2024-03-16 01:04:17", 870000, 0.1210174635052681 ),
    ("2024-03-16 01:08:15", 880000, 0.02935444936156273),
    ("2024-03-16 01:12:44", 890000, 0.10568109899759293),
    ("2024-03-16 01:16:36", 900000, 0.06454569101333618),
    ("2024-03-16 01:21:02", 910000, 0.07440464198589325),
    ("2024-03-16 01:25:17", 920000, 0.05119524896144867),
    ("2024-03-16 01:29:18", 930000, 0.10378655791282654),
    ("2024-03-16 01:33:58", 940000, 0.08293834328651428),
    ("2024-03-16 01:38:42", 950000, 0.090709388256073  ),
    ("2024-03-16 01:43:26", 960000, 0.0568886436522007 ),
    ("2024-03-16 01:48:21", 970000, 0.08624045550823212),
    ("2024-03-16 01:53:07", 980000, 0.08190511167049408),
    ("2024-03-16 01:58:01", 990000, 0.09564690291881561),
    ("2024-03-16 02:03:06", 1000000, 0.1260136514902115)
    ]

# Extracting Count and c_train
count = [entry[1] for entry in data]
c_train = [entry[2] for entry in data]

# Plotting
plt.plot(count, c_train, marker='o', linestyle='-', label='Data')

# Fitting a polynomial of degree 2 to the data
fit = np.polyfit(count, c_train, 2)
trend_line = np.poly1d(fit)

# Plotting trend line with thicker line
plt.plot(count, trend_line(count), linestyle='--', color='red', linewidth=2, label='Trend Line')

plt.xlabel('Iterations')
plt.ylabel('c_train')
plt.title('c_train vs Iteration')
plt.legend()
plt.grid(True)
plt.show()
