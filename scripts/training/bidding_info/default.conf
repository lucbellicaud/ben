[models]
model_version = 1
use_bba = False
NS = 1
EW = 99
tf_version = 1

[bidding]
bidder = UCBC 2024/Models/NS1EW99-bidding_same-2870000
info = UCBC 2024/Models/NS1EW99-binfo_same-2082000
search_threshold = -1

[lead]
lead_suit = models/lead_model_b/lead-1000000
lead_nt = models/lead_model_b/lead-1000000
lead_threshold = 0.05
# Lead this card suggested by neural network if prediction is over this value
lead_accept_nn = 0.99

[eval]
lead_single_dummy = models/lr3_model/lr3-1000000
no_lead_single_dummy = models/lr3_model/lr3-1000000

[cardplay]
lefty_nt = models/lefty_model/lefty-1000000
dummy_nt = models/dummy_model/dummy-920000
righty_nt = models/righty_model/righty-1000000
decl_nt = models/decl_model/decl-1000000
lefty_suit = models/lefty_model/lefty-1000000
dummy_suit = models/dummy_model/dummy-920000
righty_suit = models/righty_model/righty-1000000
decl_suit = models/decl_model/decl-1000000
# Number of samples when playing the hand
sample_hands_play = 100
# Minimum number of boards we want returned for sampling
min_sample_hands_play = 20
# Number of samples we will generate to find sample_hands_play
sample_boards_for_play = 5000
# Should possible claim be calculated
claim = False

[sampling]
lead_accept_threshold = 0.01
bidding_threshold_sampling = 0.75
play_accept_threshold = 0.03
bid_accept_play_threshold = 0.05
# Number hands where we will calculate scores for when bidding
sample_hands_auction = 128
# The number of hands we will generate to find sample_hands_auction
sample_boards_for_auction = 5000
# Minimum number of hands when caclulating scores in the bidding
min_sample_hands_auction = 10
sample_boards_for_auction_opening_lead = 50000
sample_hands_opening_lead = 128
